#ifndef _ALTERA_HPS_SOC_SYSTEM_H_
#define _ALTERA_HPS_SOC_SYSTEM_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'Computer_System' in
 * file 'verilog/Computer_System.sopcinfo'.
 */

/*
 * This file contains macros for module 'ARM_A9_HPS' and devices
 * connected to the following masters:
 *   h2f_axi_master
 *   h2f_lw_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'SDRAM', class 'altera_avalon_new_sdram_controller'
 * The macros are prefixed with 'SDRAM_'.
 * The prefix is the slave descriptor.
 */
#define SDRAM_COMPONENT_TYPE altera_avalon_new_sdram_controller
#define SDRAM_COMPONENT_NAME SDRAM
#define SDRAM_BASE 0x0
#define SDRAM_SPAN 67108864
#define SDRAM_END 0x3ffffff
#define SDRAM_CAS_LATENCY 3
#define SDRAM_CONTENTS_INFO 
#define SDRAM_INIT_NOP_DELAY 0.0
#define SDRAM_INIT_REFRESH_COMMANDS 2
#define SDRAM_IS_INITIALIZED 1
#define SDRAM_POWERUP_DELAY 100.0
#define SDRAM_REFRESH_PERIOD 15.625
#define SDRAM_REGISTER_DATA_IN 1
#define SDRAM_SDRAM_ADDR_WIDTH 25
#define SDRAM_SDRAM_BANK_WIDTH 2
#define SDRAM_SDRAM_COL_WIDTH 10
#define SDRAM_SDRAM_DATA_WIDTH 16
#define SDRAM_SDRAM_NUM_BANKS 4
#define SDRAM_SDRAM_NUM_CHIPSELECTS 1
#define SDRAM_SDRAM_ROW_WIDTH 13
#define SDRAM_SHARED_DATA 0
#define SDRAM_SIM_MODEL_BASE 1
#define SDRAM_STARVATION_INDICATOR 0
#define SDRAM_TRISTATE_BRIDGE_SLAVE ""
#define SDRAM_T_AC 5.5
#define SDRAM_T_MRD 3
#define SDRAM_T_RCD 20.0
#define SDRAM_T_RFC 70.0
#define SDRAM_T_RP 20.0
#define SDRAM_T_WR 14.0
#define SDRAM_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 1
#define SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'LEDs', class 'altera_avalon_pio'
 * The macros are prefixed with 'LEDS_'.
 * The prefix is the slave descriptor.
 */
#define LEDS_COMPONENT_TYPE altera_avalon_pio
#define LEDS_COMPONENT_NAME LEDs
#define LEDS_BASE 0x0
#define LEDS_SPAN 64
#define LEDS_END 0x3f
#define LEDS_BIT_CLEARING_EDGE_REGISTER 0
#define LEDS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define LEDS_CAPTURE 0
#define LEDS_DATA_WIDTH 10
#define LEDS_DO_TEST_BENCH_WIRING 0
#define LEDS_DRIVEN_SIM_VALUE 0
#define LEDS_EDGE_TYPE NONE
#define LEDS_FREQ 100000000
#define LEDS_HAS_IN 0
#define LEDS_HAS_OUT 1
#define LEDS_HAS_TRI 0
#define LEDS_IRQ_TYPE NONE
#define LEDS_RESET_VALUE 0

/*
 * Macros for device 'FIFO_OUT_READ_REQ_PIO', class 'altera_avalon_pio'
 * The macros are prefixed with 'FIFO_OUT_READ_REQ_PIO_'.
 * The prefix is the slave descriptor.
 */
#define FIFO_OUT_READ_REQ_PIO_COMPONENT_TYPE altera_avalon_pio
#define FIFO_OUT_READ_REQ_PIO_COMPONENT_NAME FIFO_OUT_READ_REQ_PIO
#define FIFO_OUT_READ_REQ_PIO_BASE 0x10
#define FIFO_OUT_READ_REQ_PIO_SPAN 64
#define FIFO_OUT_READ_REQ_PIO_END 0x4f
#define FIFO_OUT_READ_REQ_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define FIFO_OUT_READ_REQ_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FIFO_OUT_READ_REQ_PIO_CAPTURE 0
#define FIFO_OUT_READ_REQ_PIO_DATA_WIDTH 1
#define FIFO_OUT_READ_REQ_PIO_DO_TEST_BENCH_WIRING 0
#define FIFO_OUT_READ_REQ_PIO_DRIVEN_SIM_VALUE 0
#define FIFO_OUT_READ_REQ_PIO_EDGE_TYPE NONE
#define FIFO_OUT_READ_REQ_PIO_FREQ 100000000
#define FIFO_OUT_READ_REQ_PIO_HAS_IN 0
#define FIFO_OUT_READ_REQ_PIO_HAS_OUT 1
#define FIFO_OUT_READ_REQ_PIO_HAS_TRI 0
#define FIFO_OUT_READ_REQ_PIO_IRQ_TYPE NONE
#define FIFO_OUT_READ_REQ_PIO_RESET_VALUE 0

/*
 * Macros for device 'HEX3_HEX0', class 'altera_avalon_pio'
 * The macros are prefixed with 'HEX3_HEX0_'.
 * The prefix is the slave descriptor.
 */
#define HEX3_HEX0_COMPONENT_TYPE altera_avalon_pio
#define HEX3_HEX0_COMPONENT_NAME HEX3_HEX0
#define HEX3_HEX0_BASE 0x20
#define HEX3_HEX0_SPAN 64
#define HEX3_HEX0_END 0x5f
#define HEX3_HEX0_BIT_CLEARING_EDGE_REGISTER 0
#define HEX3_HEX0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HEX3_HEX0_CAPTURE 0
#define HEX3_HEX0_DATA_WIDTH 32
#define HEX3_HEX0_DO_TEST_BENCH_WIRING 0
#define HEX3_HEX0_DRIVEN_SIM_VALUE 0
#define HEX3_HEX0_EDGE_TYPE NONE
#define HEX3_HEX0_FREQ 100000000
#define HEX3_HEX0_HAS_IN 0
#define HEX3_HEX0_HAS_OUT 1
#define HEX3_HEX0_HAS_TRI 0
#define HEX3_HEX0_IRQ_TYPE NONE
#define HEX3_HEX0_RESET_VALUE 0

/*
 * Macros for device 'HEX5_HEX4', class 'altera_avalon_pio'
 * The macros are prefixed with 'HEX5_HEX4_'.
 * The prefix is the slave descriptor.
 */
#define HEX5_HEX4_COMPONENT_TYPE altera_avalon_pio
#define HEX5_HEX4_COMPONENT_NAME HEX5_HEX4
#define HEX5_HEX4_BASE 0x30
#define HEX5_HEX4_SPAN 64
#define HEX5_HEX4_END 0x6f
#define HEX5_HEX4_BIT_CLEARING_EDGE_REGISTER 0
#define HEX5_HEX4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HEX5_HEX4_CAPTURE 0
#define HEX5_HEX4_DATA_WIDTH 16
#define HEX5_HEX4_DO_TEST_BENCH_WIRING 0
#define HEX5_HEX4_DRIVEN_SIM_VALUE 0
#define HEX5_HEX4_EDGE_TYPE NONE
#define HEX5_HEX4_FREQ 100000000
#define HEX5_HEX4_HAS_IN 0
#define HEX5_HEX4_HAS_OUT 1
#define HEX5_HEX4_HAS_TRI 0
#define HEX5_HEX4_IRQ_TYPE NONE
#define HEX5_HEX4_RESET_VALUE 0

/*
 * Macros for device 'Slider_Switches', class 'altera_avalon_pio'
 * The macros are prefixed with 'SLIDER_SWITCHES_'.
 * The prefix is the slave descriptor.
 */
#define SLIDER_SWITCHES_COMPONENT_TYPE altera_avalon_pio
#define SLIDER_SWITCHES_COMPONENT_NAME Slider_Switches
#define SLIDER_SWITCHES_BASE 0x40
#define SLIDER_SWITCHES_SPAN 64
#define SLIDER_SWITCHES_END 0x7f
#define SLIDER_SWITCHES_BIT_CLEARING_EDGE_REGISTER 0
#define SLIDER_SWITCHES_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SLIDER_SWITCHES_CAPTURE 0
#define SLIDER_SWITCHES_DATA_WIDTH 10
#define SLIDER_SWITCHES_DO_TEST_BENCH_WIRING 1
#define SLIDER_SWITCHES_DRIVEN_SIM_VALUE 0
#define SLIDER_SWITCHES_EDGE_TYPE NONE
#define SLIDER_SWITCHES_FREQ 100000000
#define SLIDER_SWITCHES_HAS_IN 1
#define SLIDER_SWITCHES_HAS_OUT 0
#define SLIDER_SWITCHES_HAS_TRI 0
#define SLIDER_SWITCHES_IRQ_TYPE NONE
#define SLIDER_SWITCHES_RESET_VALUE 0

/*
 * Macros for device 'Pushbuttons', class 'altera_avalon_pio'
 * The macros are prefixed with 'PUSHBUTTONS_'.
 * The prefix is the slave descriptor.
 */
#define PUSHBUTTONS_COMPONENT_TYPE altera_avalon_pio
#define PUSHBUTTONS_COMPONENT_NAME Pushbuttons
#define PUSHBUTTONS_BASE 0x50
#define PUSHBUTTONS_SPAN 64
#define PUSHBUTTONS_END 0x8f
#define PUSHBUTTONS_IRQ 1
#define PUSHBUTTONS_BIT_CLEARING_EDGE_REGISTER 1
#define PUSHBUTTONS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PUSHBUTTONS_CAPTURE 1
#define PUSHBUTTONS_DATA_WIDTH 4
#define PUSHBUTTONS_DO_TEST_BENCH_WIRING 1
#define PUSHBUTTONS_DRIVEN_SIM_VALUE 0
#define PUSHBUTTONS_EDGE_TYPE FALLING
#define PUSHBUTTONS_FREQ 100000000
#define PUSHBUTTONS_HAS_IN 1
#define PUSHBUTTONS_HAS_OUT 0
#define PUSHBUTTONS_HAS_TRI 0
#define PUSHBUTTONS_IRQ_TYPE EDGE
#define PUSHBUTTONS_RESET_VALUE 0

/*
 * Macros for device 'Expansion_JP1', class 'altera_avalon_pio'
 * The macros are prefixed with 'EXPANSION_JP1_'.
 * The prefix is the slave descriptor.
 */
#define EXPANSION_JP1_COMPONENT_TYPE altera_avalon_pio
#define EXPANSION_JP1_COMPONENT_NAME Expansion_JP1
#define EXPANSION_JP1_BASE 0x60
#define EXPANSION_JP1_SPAN 64
#define EXPANSION_JP1_END 0x9f
#define EXPANSION_JP1_IRQ 11
#define EXPANSION_JP1_BIT_CLEARING_EDGE_REGISTER 1
#define EXPANSION_JP1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define EXPANSION_JP1_CAPTURE 1
#define EXPANSION_JP1_DATA_WIDTH 32
#define EXPANSION_JP1_DO_TEST_BENCH_WIRING 1
#define EXPANSION_JP1_DRIVEN_SIM_VALUE 0
#define EXPANSION_JP1_EDGE_TYPE FALLING
#define EXPANSION_JP1_FREQ 100000000
#define EXPANSION_JP1_HAS_IN 0
#define EXPANSION_JP1_HAS_OUT 0
#define EXPANSION_JP1_HAS_TRI 1
#define EXPANSION_JP1_IRQ_TYPE EDGE
#define EXPANSION_JP1_RESET_VALUE 0

/*
 * Macros for device 'FIFO_IN_WRITE_REQ_PIO', class 'altera_avalon_pio'
 * The macros are prefixed with 'FIFO_IN_WRITE_REQ_PIO_'.
 * The prefix is the slave descriptor.
 */
#define FIFO_IN_WRITE_REQ_PIO_COMPONENT_TYPE altera_avalon_pio
#define FIFO_IN_WRITE_REQ_PIO_COMPONENT_NAME FIFO_IN_WRITE_REQ_PIO
#define FIFO_IN_WRITE_REQ_PIO_BASE 0x70
#define FIFO_IN_WRITE_REQ_PIO_SPAN 64
#define FIFO_IN_WRITE_REQ_PIO_END 0xaf
#define FIFO_IN_WRITE_REQ_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define FIFO_IN_WRITE_REQ_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FIFO_IN_WRITE_REQ_PIO_CAPTURE 0
#define FIFO_IN_WRITE_REQ_PIO_DATA_WIDTH 1
#define FIFO_IN_WRITE_REQ_PIO_DO_TEST_BENCH_WIRING 0
#define FIFO_IN_WRITE_REQ_PIO_DRIVEN_SIM_VALUE 0
#define FIFO_IN_WRITE_REQ_PIO_EDGE_TYPE NONE
#define FIFO_IN_WRITE_REQ_PIO_FREQ 100000000
#define FIFO_IN_WRITE_REQ_PIO_HAS_IN 0
#define FIFO_IN_WRITE_REQ_PIO_HAS_OUT 1
#define FIFO_IN_WRITE_REQ_PIO_HAS_TRI 0
#define FIFO_IN_WRITE_REQ_PIO_IRQ_TYPE NONE
#define FIFO_IN_WRITE_REQ_PIO_RESET_VALUE 0

/*
 * Macros for device 'FIFO_IN_FULL_PIO', class 'altera_avalon_pio'
 * The macros are prefixed with 'FIFO_IN_FULL_PIO_'.
 * The prefix is the slave descriptor.
 */
#define FIFO_IN_FULL_PIO_COMPONENT_TYPE altera_avalon_pio
#define FIFO_IN_FULL_PIO_COMPONENT_NAME FIFO_IN_FULL_PIO
#define FIFO_IN_FULL_PIO_BASE 0x80
#define FIFO_IN_FULL_PIO_SPAN 64
#define FIFO_IN_FULL_PIO_END 0xbf
#define FIFO_IN_FULL_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define FIFO_IN_FULL_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FIFO_IN_FULL_PIO_CAPTURE 0
#define FIFO_IN_FULL_PIO_DATA_WIDTH 1
#define FIFO_IN_FULL_PIO_DO_TEST_BENCH_WIRING 0
#define FIFO_IN_FULL_PIO_DRIVEN_SIM_VALUE 0
#define FIFO_IN_FULL_PIO_EDGE_TYPE NONE
#define FIFO_IN_FULL_PIO_FREQ 100000000
#define FIFO_IN_FULL_PIO_HAS_IN 1
#define FIFO_IN_FULL_PIO_HAS_OUT 0
#define FIFO_IN_FULL_PIO_HAS_TRI 0
#define FIFO_IN_FULL_PIO_IRQ_TYPE NONE
#define FIFO_IN_FULL_PIO_RESET_VALUE 0

/*
 * Macros for device 'ODATA_PIO', class 'altera_avalon_pio'
 * The macros are prefixed with 'ODATA_PIO_'.
 * The prefix is the slave descriptor.
 */
#define ODATA_PIO_COMPONENT_TYPE altera_avalon_pio
#define ODATA_PIO_COMPONENT_NAME ODATA_PIO
#define ODATA_PIO_BASE 0x90
#define ODATA_PIO_SPAN 64
#define ODATA_PIO_END 0xcf
#define ODATA_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define ODATA_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define ODATA_PIO_CAPTURE 0
#define ODATA_PIO_DATA_WIDTH 8
#define ODATA_PIO_DO_TEST_BENCH_WIRING 0
#define ODATA_PIO_DRIVEN_SIM_VALUE 0
#define ODATA_PIO_EDGE_TYPE NONE
#define ODATA_PIO_FREQ 100000000
#define ODATA_PIO_HAS_IN 0
#define ODATA_PIO_HAS_OUT 1
#define ODATA_PIO_HAS_TRI 0
#define ODATA_PIO_IRQ_TYPE NONE
#define ODATA_PIO_RESET_VALUE 0

/*
 * Macros for device 'IDATA_PIO', class 'altera_avalon_pio'
 * The macros are prefixed with 'IDATA_PIO_'.
 * The prefix is the slave descriptor.
 */
#define IDATA_PIO_COMPONENT_TYPE altera_avalon_pio
#define IDATA_PIO_COMPONENT_NAME IDATA_PIO
#define IDATA_PIO_BASE 0xa0
#define IDATA_PIO_SPAN 64
#define IDATA_PIO_END 0xdf
#define IDATA_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define IDATA_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define IDATA_PIO_CAPTURE 0
#define IDATA_PIO_DATA_WIDTH 24
#define IDATA_PIO_DO_TEST_BENCH_WIRING 0
#define IDATA_PIO_DRIVEN_SIM_VALUE 0
#define IDATA_PIO_EDGE_TYPE NONE
#define IDATA_PIO_FREQ 100000000
#define IDATA_PIO_HAS_IN 1
#define IDATA_PIO_HAS_OUT 0
#define IDATA_PIO_HAS_TRI 0
#define IDATA_PIO_IRQ_TYPE NONE
#define IDATA_PIO_RESET_VALUE 0

/*
 * Macros for device 'RLE_RESET', class 'altera_avalon_pio'
 * The macros are prefixed with 'RLE_RESET_'.
 * The prefix is the slave descriptor.
 */
#define RLE_RESET_COMPONENT_TYPE altera_avalon_pio
#define RLE_RESET_COMPONENT_NAME RLE_RESET
#define RLE_RESET_BASE 0xb0
#define RLE_RESET_SPAN 64
#define RLE_RESET_END 0xef
#define RLE_RESET_BIT_CLEARING_EDGE_REGISTER 0
#define RLE_RESET_BIT_MODIFYING_OUTPUT_REGISTER 0
#define RLE_RESET_CAPTURE 0
#define RLE_RESET_DATA_WIDTH 1
#define RLE_RESET_DO_TEST_BENCH_WIRING 0
#define RLE_RESET_DRIVEN_SIM_VALUE 0
#define RLE_RESET_EDGE_TYPE NONE
#define RLE_RESET_FREQ 100000000
#define RLE_RESET_HAS_IN 0
#define RLE_RESET_HAS_OUT 1
#define RLE_RESET_HAS_TRI 0
#define RLE_RESET_IRQ_TYPE NONE
#define RLE_RESET_RESET_VALUE 0

/*
 * Macros for device 'RLE_FLUSH_PIO', class 'altera_avalon_pio'
 * The macros are prefixed with 'RLE_FLUSH_PIO_'.
 * The prefix is the slave descriptor.
 */
#define RLE_FLUSH_PIO_COMPONENT_TYPE altera_avalon_pio
#define RLE_FLUSH_PIO_COMPONENT_NAME RLE_FLUSH_PIO
#define RLE_FLUSH_PIO_BASE 0xc0
#define RLE_FLUSH_PIO_SPAN 64
#define RLE_FLUSH_PIO_END 0xff
#define RLE_FLUSH_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define RLE_FLUSH_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define RLE_FLUSH_PIO_CAPTURE 0
#define RLE_FLUSH_PIO_DATA_WIDTH 1
#define RLE_FLUSH_PIO_DO_TEST_BENCH_WIRING 0
#define RLE_FLUSH_PIO_DRIVEN_SIM_VALUE 0
#define RLE_FLUSH_PIO_EDGE_TYPE NONE
#define RLE_FLUSH_PIO_FREQ 100000000
#define RLE_FLUSH_PIO_HAS_IN 0
#define RLE_FLUSH_PIO_HAS_OUT 1
#define RLE_FLUSH_PIO_HAS_TRI 0
#define RLE_FLUSH_PIO_IRQ_TYPE NONE
#define RLE_FLUSH_PIO_RESET_VALUE 0

/*
 * Macros for device 'RESULT_READY_PIO', class 'altera_avalon_pio'
 * The macros are prefixed with 'RESULT_READY_PIO_'.
 * The prefix is the slave descriptor.
 */
#define RESULT_READY_PIO_COMPONENT_TYPE altera_avalon_pio
#define RESULT_READY_PIO_COMPONENT_NAME RESULT_READY_PIO
#define RESULT_READY_PIO_BASE 0xd0
#define RESULT_READY_PIO_SPAN 64
#define RESULT_READY_PIO_END 0x10f
#define RESULT_READY_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define RESULT_READY_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define RESULT_READY_PIO_CAPTURE 0
#define RESULT_READY_PIO_DATA_WIDTH 1
#define RESULT_READY_PIO_DO_TEST_BENCH_WIRING 0
#define RESULT_READY_PIO_DRIVEN_SIM_VALUE 0
#define RESULT_READY_PIO_EDGE_TYPE NONE
#define RESULT_READY_PIO_FREQ 100000000
#define RESULT_READY_PIO_HAS_IN 1
#define RESULT_READY_PIO_HAS_OUT 0
#define RESULT_READY_PIO_HAS_TRI 0
#define RESULT_READY_PIO_IRQ_TYPE NONE
#define RESULT_READY_PIO_RESET_VALUE 0

/*
 * Macros for device 'JTAG_UART_for_ARM_0', class 'altera_avalon_jtag_uart'
 * The macros are prefixed with 'JTAG_UART_FOR_ARM_0_'.
 * The prefix is the slave descriptor.
 */
#define JTAG_UART_FOR_ARM_0_COMPONENT_TYPE altera_avalon_jtag_uart
#define JTAG_UART_FOR_ARM_0_COMPONENT_NAME JTAG_UART_for_ARM_0
#define JTAG_UART_FOR_ARM_0_BASE 0x1000
#define JTAG_UART_FOR_ARM_0_SPAN 32
#define JTAG_UART_FOR_ARM_0_END 0x101f
#define JTAG_UART_FOR_ARM_0_IRQ 8
#define JTAG_UART_FOR_ARM_0_READ_DEPTH 64
#define JTAG_UART_FOR_ARM_0_READ_THRESHOLD 8
#define JTAG_UART_FOR_ARM_0_WRITE_DEPTH 64
#define JTAG_UART_FOR_ARM_0_WRITE_THRESHOLD 8

/*
 * Macros for device 'JTAG_UART_for_ARM_1', class 'altera_avalon_jtag_uart'
 * The macros are prefixed with 'JTAG_UART_FOR_ARM_1_'.
 * The prefix is the slave descriptor.
 */
#define JTAG_UART_FOR_ARM_1_COMPONENT_TYPE altera_avalon_jtag_uart
#define JTAG_UART_FOR_ARM_1_COMPONENT_NAME JTAG_UART_for_ARM_1
#define JTAG_UART_FOR_ARM_1_BASE 0x1008
#define JTAG_UART_FOR_ARM_1_SPAN 32
#define JTAG_UART_FOR_ARM_1_END 0x1027
#define JTAG_UART_FOR_ARM_1_IRQ 8
#define JTAG_UART_FOR_ARM_1_READ_DEPTH 64
#define JTAG_UART_FOR_ARM_1_READ_THRESHOLD 8
#define JTAG_UART_FOR_ARM_1_WRITE_DEPTH 64
#define JTAG_UART_FOR_ARM_1_WRITE_THRESHOLD 8

/*
 * Macros for device 'IrDA', class 'altera_up_avalon_irda'
 * The macros are prefixed with 'IRDA_'.
 * The prefix is the slave descriptor.
 */
#define IRDA_COMPONENT_TYPE altera_up_avalon_irda
#define IRDA_COMPONENT_NAME IrDA
#define IRDA_BASE 0x1020
#define IRDA_SPAN 8
#define IRDA_END 0x1027
#define IRDA_IRQ 9

/*
 * Macros for device 'Interval_Timer', class 'altera_avalon_timer'
 * The macros are prefixed with 'INTERVAL_TIMER_'.
 * The prefix is the slave descriptor.
 */
#define INTERVAL_TIMER_COMPONENT_TYPE altera_avalon_timer
#define INTERVAL_TIMER_COMPONENT_NAME Interval_Timer
#define INTERVAL_TIMER_BASE 0x2000
#define INTERVAL_TIMER_SPAN 128
#define INTERVAL_TIMER_END 0x207f
#define INTERVAL_TIMER_IRQ 0
#define INTERVAL_TIMER_ALWAYS_RUN 0
#define INTERVAL_TIMER_COUNTER_SIZE 32
#define INTERVAL_TIMER_FIXED_PERIOD 0
#define INTERVAL_TIMER_FREQ 100000000
#define INTERVAL_TIMER_LOAD_VALUE 12499999
#define INTERVAL_TIMER_MULT 0.001
#define INTERVAL_TIMER_PERIOD 125.0
#define INTERVAL_TIMER_PERIOD_UNITS ms
#define INTERVAL_TIMER_RESET_OUTPUT 0
#define INTERVAL_TIMER_SNAPSHOT 1
#define INTERVAL_TIMER_TICKS_PER_SEC 8
#define INTERVAL_TIMER_TIMEOUT_PULSE_OUTPUT 0

/*
 * Macros for device 'Interval_Timer_2', class 'altera_avalon_timer'
 * The macros are prefixed with 'INTERVAL_TIMER_2_'.
 * The prefix is the slave descriptor.
 */
#define INTERVAL_TIMER_2_COMPONENT_TYPE altera_avalon_timer
#define INTERVAL_TIMER_2_COMPONENT_NAME Interval_Timer_2
#define INTERVAL_TIMER_2_BASE 0x2020
#define INTERVAL_TIMER_2_SPAN 128
#define INTERVAL_TIMER_2_END 0x209f
#define INTERVAL_TIMER_2_IRQ 2
#define INTERVAL_TIMER_2_ALWAYS_RUN 0
#define INTERVAL_TIMER_2_COUNTER_SIZE 32
#define INTERVAL_TIMER_2_FIXED_PERIOD 0
#define INTERVAL_TIMER_2_FREQ 100000000
#define INTERVAL_TIMER_2_LOAD_VALUE 12499999
#define INTERVAL_TIMER_2_MULT 0.001
#define INTERVAL_TIMER_2_PERIOD 125.0
#define INTERVAL_TIMER_2_PERIOD_UNITS ms
#define INTERVAL_TIMER_2_RESET_OUTPUT 0
#define INTERVAL_TIMER_2_SNAPSHOT 1
#define INTERVAL_TIMER_2_TICKS_PER_SEC 8
#define INTERVAL_TIMER_2_TIMEOUT_PULSE_OUTPUT 0

/*
 * Macros for device 'SysID', class 'altera_avalon_sysid_qsys'
 * The macros are prefixed with 'SYSID_'.
 * The prefix is the slave descriptor.
 */
#define SYSID_COMPONENT_TYPE altera_avalon_sysid_qsys
#define SYSID_COMPONENT_NAME SysID
#define SYSID_BASE 0x2040
#define SYSID_SPAN 8
#define SYSID_END 0x2047
#define SYSID_ID 0
#define SYSID_TIMESTAMP 1462415480

/*
 * Macros for device 'AV_Config', class 'altera_up_avalon_audio_and_video_config'
 * The macros are prefixed with 'AV_CONFIG_'.
 * The prefix is the slave descriptor.
 */
#define AV_CONFIG_COMPONENT_TYPE altera_up_avalon_audio_and_video_config
#define AV_CONFIG_COMPONENT_NAME AV_Config
#define AV_CONFIG_BASE 0x3000
#define AV_CONFIG_SPAN 16
#define AV_CONFIG_END 0x300f

/*
 * Macros for device 'Pixel_DMA_Addr_Translation', class 'altera_up_avalon_video_dma_ctrl_addr_trans'
 * The macros are prefixed with 'PIXEL_DMA_ADDR_TRANSLATION_'.
 * The prefix is the slave descriptor.
 */
#define PIXEL_DMA_ADDR_TRANSLATION_COMPONENT_TYPE altera_up_avalon_video_dma_ctrl_addr_trans
#define PIXEL_DMA_ADDR_TRANSLATION_COMPONENT_NAME Pixel_DMA_Addr_Translation
#define PIXEL_DMA_ADDR_TRANSLATION_BASE 0x3020
#define PIXEL_DMA_ADDR_TRANSLATION_SPAN 16
#define PIXEL_DMA_ADDR_TRANSLATION_END 0x302f

/*
 * Macros for device 'VGA_Subsystem_VGA_Char_Buffer_avalon_char_control_slave', class 'altera_up_avalon_video_character_buffer_with_dma'
 * The macros are prefixed with 'VGA_SUBSYSTEM_VGA_CHAR_BUFFER_AVALON_CHAR_CONTROL_SLAVE_'.
 * The prefix is the slave descriptor.
 */
#define VGA_SUBSYSTEM_VGA_CHAR_BUFFER_AVALON_CHAR_CONTROL_SLAVE_COMPONENT_TYPE altera_up_avalon_video_character_buffer_with_dma
#define VGA_SUBSYSTEM_VGA_CHAR_BUFFER_AVALON_CHAR_CONTROL_SLAVE_COMPONENT_NAME VGA_Subsystem_VGA_Char_Buffer
#define VGA_SUBSYSTEM_VGA_CHAR_BUFFER_AVALON_CHAR_CONTROL_SLAVE_BASE 0x3030
#define VGA_SUBSYSTEM_VGA_CHAR_BUFFER_AVALON_CHAR_CONTROL_SLAVE_SPAN 8
#define VGA_SUBSYSTEM_VGA_CHAR_BUFFER_AVALON_CHAR_CONTROL_SLAVE_END 0x3037

/*
 * Macros for device 'Video_In_DMA_Addr_Translation', class 'altera_up_avalon_video_dma_ctrl_addr_trans'
 * The macros are prefixed with 'VIDEO_IN_DMA_ADDR_TRANSLATION_'.
 * The prefix is the slave descriptor.
 */
#define VIDEO_IN_DMA_ADDR_TRANSLATION_COMPONENT_TYPE altera_up_avalon_video_dma_ctrl_addr_trans
#define VIDEO_IN_DMA_ADDR_TRANSLATION_COMPONENT_NAME Video_In_DMA_Addr_Translation
#define VIDEO_IN_DMA_ADDR_TRANSLATION_BASE 0x3060
#define VIDEO_IN_DMA_ADDR_TRANSLATION_SPAN 16
#define VIDEO_IN_DMA_ADDR_TRANSLATION_END 0x306f

/*
 * Macros for device 'D5M_Subsystem_D5M_Config', class 'altera_up_avalon_audio_and_video_config'
 * The macros are prefixed with 'D5M_SUBSYSTEM_D5M_CONFIG_'.
 * The prefix is the slave descriptor.
 */
#define D5M_SUBSYSTEM_D5M_CONFIG_COMPONENT_TYPE altera_up_avalon_audio_and_video_config
#define D5M_SUBSYSTEM_D5M_CONFIG_COMPONENT_NAME D5M_Subsystem_D5M_Config
#define D5M_SUBSYSTEM_D5M_CONFIG_BASE 0x3070
#define D5M_SUBSYSTEM_D5M_CONFIG_SPAN 16
#define D5M_SUBSYSTEM_D5M_CONFIG_END 0x307f

/*
 * Macros for device 'ADC', class 'altera_up_avalon_adc'
 * The macros are prefixed with 'ADC_'.
 * The prefix is the slave descriptor.
 */
#define ADC_COMPONENT_TYPE altera_up_avalon_adc
#define ADC_COMPONENT_NAME ADC
#define ADC_BASE 0x4000
#define ADC_SPAN 32
#define ADC_END 0x401f

/*
 * Macros for device 'Onchip_SRAM', class 'altera_avalon_onchip_memory2'
 * The macros are prefixed with 'ONCHIP_SRAM_'.
 * The prefix is the slave descriptor.
 */
#define ONCHIP_SRAM_COMPONENT_TYPE altera_avalon_onchip_memory2
#define ONCHIP_SRAM_COMPONENT_NAME Onchip_SRAM
#define ONCHIP_SRAM_BASE 0x8000000
#define ONCHIP_SRAM_SPAN 262144
#define ONCHIP_SRAM_END 0x803ffff
#define ONCHIP_SRAM_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define ONCHIP_SRAM_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define ONCHIP_SRAM_CONTENTS_INFO ""
#define ONCHIP_SRAM_DUAL_PORT 1
#define ONCHIP_SRAM_GUI_RAM_BLOCK_TYPE AUTO
#define ONCHIP_SRAM_INIT_CONTENTS_FILE Computer_System_Onchip_SRAM
#define ONCHIP_SRAM_INIT_MEM_CONTENT 1
#define ONCHIP_SRAM_INSTANCE_ID NONE
#define ONCHIP_SRAM_NON_DEFAULT_INIT_FILE_ENABLED 0
#define ONCHIP_SRAM_RAM_BLOCK_TYPE AUTO
#define ONCHIP_SRAM_READ_DURING_WRITE_MODE DONT_CARE
#define ONCHIP_SRAM_SINGLE_CLOCK_OP 1
#define ONCHIP_SRAM_SIZE_MULTIPLE 1
#define ONCHIP_SRAM_SIZE_VALUE 262144
#define ONCHIP_SRAM_WRITABLE 1
#define ONCHIP_SRAM_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define ONCHIP_SRAM_MEMORY_INFO_GENERATE_DAT_SYM 1
#define ONCHIP_SRAM_MEMORY_INFO_GENERATE_HEX 1
#define ONCHIP_SRAM_MEMORY_INFO_HAS_BYTE_LANE 0
#define ONCHIP_SRAM_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define ONCHIP_SRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 32
#define ONCHIP_SRAM_MEMORY_INFO_MEM_INIT_FILENAME Computer_System_Onchip_SRAM

/*
 * Macros for device 'VGA_Subsystem_VGA_Char_Buffer_avalon_char_buffer_slave', class 'altera_up_avalon_video_character_buffer_with_dma'
 * The macros are prefixed with 'VGA_SUBSYSTEM_VGA_CHAR_BUFFER_AVALON_CHAR_BUFFER_SLAVE_'.
 * The prefix is the slave descriptor.
 */
#define VGA_SUBSYSTEM_VGA_CHAR_BUFFER_AVALON_CHAR_BUFFER_SLAVE_COMPONENT_TYPE altera_up_avalon_video_character_buffer_with_dma
#define VGA_SUBSYSTEM_VGA_CHAR_BUFFER_AVALON_CHAR_BUFFER_SLAVE_COMPONENT_NAME VGA_Subsystem_VGA_Char_Buffer
#define VGA_SUBSYSTEM_VGA_CHAR_BUFFER_AVALON_CHAR_BUFFER_SLAVE_BASE 0x9000000
#define VGA_SUBSYSTEM_VGA_CHAR_BUFFER_AVALON_CHAR_BUFFER_SLAVE_SPAN 8192
#define VGA_SUBSYSTEM_VGA_CHAR_BUFFER_AVALON_CHAR_BUFFER_SLAVE_END 0x9001fff


#endif /* _ALTERA_HPS_SOC_SYSTEM_H_ */
